// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SummerCampManagementSystem.DAL.Models;

#nullable disable

namespace SummerCampManagementSystem.DAL.Migrations
{
    [DbContext(typeof(CampEaseDatabaseContext))]
    [Migration("20251021070804_InitialSchema")]
    partial class InitialSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CamperRegistration", b =>
                {
                    b.Property<int>("camperId")
                        .HasColumnType("int");

                    b.Property<int>("registrationId")
                        .HasColumnType("int");

                    b.HasKey("camperId", "registrationId");

                    b.ToTable("CamperRegistration");
                });

            modelBuilder.Entity("RegistrationCamper", b =>
                {
                    b.Property<int>("registrationId")
                        .HasColumnType("int");

                    b.Property<int>("camperId")
                        .HasColumnType("int");

                    b.HasKey("registrationId", "camperId")
                        .HasName("PK__Registra__922EFE5614C859DF");

                    b.HasIndex("camperId");

                    b.ToTable("RegistrationCamper", (string)null);
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Accommodation", b =>
                {
                    b.Property<int>("accommodationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("accommodationId"));

                    b.Property<int?>("accommodationTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("campId")
                        .HasColumnType("int");

                    b.Property<int?>("capacity")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("accommodationId")
                        .HasName("PK__Accommod__20C0A5FD5401C017");

                    b.HasIndex("accommodationTypeId");

                    b.HasIndex("campId");

                    b.ToTable("Accommodation");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.AccommodationType", b =>
                {
                    b.Property<int>("accommodationTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("accommodationTypeId"));

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("accommodationTypeId")
                        .HasName("PK__Accommod__7380C37A36BF9C0D");

                    b.ToTable("AccommodationType");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Activity", b =>
                {
                    b.Property<int>("activityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("activityId"));

                    b.Property<string>("activityType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("campId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("locationId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("activityId")
                        .HasName("PK__Activity__0FC9CBEC92704BD9");

                    b.HasIndex("campId");

                    b.HasIndex("locationId");

                    b.ToTable("Activity");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.ActivitySchedule", b =>
                {
                    b.Property<int>("activityScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("activityScheduleId"));

                    b.Property<int>("activityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("endTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("isLivestream")
                        .HasColumnType("bit");

                    b.Property<int?>("maxCapacity")
                        .HasColumnType("int");

                    b.Property<string>("roomId")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("staffId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("startTime")
                        .HasColumnType("datetime");

                    b.Property<string>("status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("activityScheduleId")
                        .HasName("PK__Activity__32136F49C26ADD1F");

                    b.ToTable("ActivitySchedule");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Album", b =>
                {
                    b.Property<int>("albumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("albumId"));

                    b.Property<int?>("campId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("date")
                        .HasColumnType("date");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("albumId")
                        .HasName("PK__Album__75BF3ECFA51B9673");

                    b.HasIndex("campId");

                    b.ToTable("Album");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.AlbumPhoto", b =>
                {
                    b.Property<int>("albumPhotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("albumPhotoId"));

                    b.Property<int?>("albumId")
                        .HasColumnType("int");

                    b.Property<string>("caption")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("photo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("albumPhotoId")
                        .HasName("PK__AlbumPho__695404581FC4A374");

                    b.HasIndex("albumId");

                    b.ToTable("AlbumPhoto");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.AlbumPhotoFace", b =>
                {
                    b.Property<int>("albumPhotoFaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("albumPhotoFaceId"));

                    b.Property<int>("albumPhotoId")
                        .HasColumnType("int");

                    b.Property<byte[]>("faceTemplate")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("albumPhotoFaceId")
                        .HasName("PK__AlbumPho__CCCCD35F5649B2BA");

                    b.HasIndex("albumPhotoId");

                    b.ToTable("AlbumPhotoFace");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.AttendanceLog", b =>
                {
                    b.Property<int>("attendanceLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("attendanceLogId"));

                    b.Property<int?>("activityId")
                        .HasColumnType("int");

                    b.Property<int>("camperId")
                        .HasColumnType("int");

                    b.Property<string>("checkInMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("eventType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("staffId")
                        .HasColumnType("int");

                    b.Property<DateTime>("timestamp")
                        .HasColumnType("datetime");

                    b.Property<int?>("vehicleId")
                        .HasColumnType("int");

                    b.HasKey("attendanceLogId")
                        .HasName("PK__Attendan__F147FFAE82437F18");

                    b.HasIndex("activityId");

                    b.HasIndex("camperId");

                    b.HasIndex("staffId");

                    b.HasIndex("vehicleId");

                    b.ToTable("AttendanceLog");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Badge", b =>
                {
                    b.Property<int>("badgeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("badgeId"));

                    b.Property<string>("badgeName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("badgeId")
                        .HasName("PK__Badge__75B46C9F476C0756");

                    b.ToTable("Badge");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.BankUser", b =>
                {
                    b.Property<int>("bankUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("bankUserId"));

                    b.Property<string>("bankCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("bankName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("bankNumber")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isPrimary")
                        .HasColumnType("bit");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.HasKey("bankUserId")
                        .HasName("PK__BankUser__CBF11725229B75CF");

                    b.HasIndex("userId");

                    b.ToTable("BankUser");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Blog", b =>
                {
                    b.Property<int>("blogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("blogId"));

                    b.Property<int?>("authorId")
                        .HasColumnType("int");

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("createAt")
                        .HasColumnType("datetime");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("blogId")
                        .HasName("PK__Blog__FA0AA72D8027A916");

                    b.HasIndex("authorId");

                    b.ToTable("Blog");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Camp", b =>
                {
                    b.Property<int>("campId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("campId"));

                    b.Property<string>("address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("campTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("createBy")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("endDate")
                        .HasColumnType("date");

                    b.Property<string>("image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("locationId")
                        .HasColumnType("int");

                    b.Property<int?>("maxAge")
                        .HasColumnType("int");

                    b.Property<int?>("maxParticipants")
                        .HasColumnType("int");

                    b.Property<int?>("minAge")
                        .HasColumnType("int");

                    b.Property<int?>("minParticipants")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("place")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("promotionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("registrationEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("registrationStartDate")
                        .HasColumnType("datetime");

                    b.Property<DateOnly?>("startDate")
                        .HasColumnType("date");

                    b.Property<string>("status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("campId")
                        .HasName("PK__Camp__BC586B191C6014DA");

                    b.HasIndex("campTypeId");

                    b.HasIndex("createBy");

                    b.HasIndex("locationId");

                    b.HasIndex("promotionId");

                    b.ToTable("Camp");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.CampBadge", b =>
                {
                    b.Property<int>("campBadgeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("campBadgeId"));

                    b.Property<int?>("badgeId")
                        .HasColumnType("int");

                    b.Property<int?>("campId")
                        .HasColumnType("int");

                    b.HasKey("campBadgeId")
                        .HasName("PK__CampBadg__7452AA76F8B74F8D");

                    b.HasIndex("badgeId");

                    b.HasIndex("campId");

                    b.ToTable("CampBadge");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.CampStaffAssignment", b =>
                {
                    b.Property<int>("campStaffAssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("campStaffAssignmentId"));

                    b.Property<int?>("campId")
                        .HasColumnType("int");

                    b.Property<int?>("staffId")
                        .HasColumnType("int");

                    b.HasKey("campStaffAssignmentId")
                        .HasName("PK__ManagerA__703B219833FB8987");

                    b.HasIndex("campId");

                    b.HasIndex("staffId");

                    b.ToTable("CampStaffAssignment");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.CampType", b =>
                {
                    b.Property<int>("campTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("campTypeId"));

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("campTypeId")
                        .HasName("PK__CampType__3EADA5F5A74792CC");

                    b.ToTable("CampType");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Camper", b =>
                {
                    b.Property<int>("camperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("camperId"));

                    b.Property<string>("avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("camperName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateOnly?>("dob")
                        .HasColumnType("date");

                    b.Property<byte[]>("faceTemplate")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("gender")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("groupId")
                        .HasColumnType("int");

                    b.HasKey("camperId")
                        .HasName("PK__Camper__1F5EA63223697F05");

                    b.HasIndex("groupId");

                    b.ToTable("Camper");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.CamperAccommodation", b =>
                {
                    b.Property<int>("camperAccommodationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("camperAccommodationId"));

                    b.Property<int>("accommodationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("assignedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("camperId")
                        .HasColumnType("int");

                    b.HasKey("camperAccommodationId")
                        .HasName("PK__CamperAc__3784380FF16C0712");

                    b.HasIndex("accommodationId");

                    b.HasIndex("camperId");

                    b.ToTable("CamperAccommodation");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.CamperActivity", b =>
                {
                    b.Property<int>("camperActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("camperActivityId"));

                    b.Property<int?>("activityId")
                        .HasColumnType("int");

                    b.Property<int?>("camperId")
                        .HasColumnType("int");

                    b.Property<string>("participationStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("camperActivityId")
                        .HasName("PK__CamperAc__B77C246F3CB74DB4");

                    b.HasIndex("activityId");

                    b.HasIndex("camperId");

                    b.ToTable("CamperActivity");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.CamperBadge", b =>
                {
                    b.Property<int>("camperBadgeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("camperBadgeId"));

                    b.Property<int?>("badgeId")
                        .HasColumnType("int");

                    b.Property<int?>("camperId")
                        .HasColumnType("int");

                    b.HasKey("camperBadgeId")
                        .HasName("PK__CamperBa__67972E47D42C121E");

                    b.HasIndex("badgeId");

                    b.HasIndex("camperId");

                    b.ToTable("CamperBadge");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.CamperGroup", b =>
                {
                    b.Property<int>("camperGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("camperGroupId"));

                    b.Property<int?>("campId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("groupName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("maxAge")
                        .HasColumnType("int");

                    b.Property<int?>("maxSize")
                        .HasColumnType("int");

                    b.Property<int?>("minAge")
                        .HasColumnType("int");

                    b.Property<int?>("supervisorId")
                        .HasColumnType("int");

                    b.HasKey("camperGroupId")
                        .HasName("PK__CamperGr__A3F9F2EB18FD70C7");

                    b.HasIndex("campId");

                    b.HasIndex("supervisorId");

                    b.ToTable("CamperGroup");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.CamperGuardian", b =>
                {
                    b.Property<int>("camperGuardianId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("camperGuardianId"));

                    b.Property<int?>("camperId")
                        .HasColumnType("int");

                    b.Property<int?>("guardianId")
                        .HasColumnType("int");

                    b.HasKey("camperGuardianId")
                        .HasName("PK__CamperGu__B304497C5424285B");

                    b.HasIndex("camperId");

                    b.HasIndex("guardianId");

                    b.ToTable("CamperGuardian");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.ChatMessageAI", b =>
                {
                    b.Property<int>("chatMessageAiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("chatMessageAiId"));

                    b.Property<string>("message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("messageCreateAt")
                        .HasColumnType("datetime");

                    b.Property<string>("response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("responseAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("senderId")
                        .HasColumnType("int");

                    b.HasKey("chatMessageAiId")
                        .HasName("PK__ChatMess__DBC8291A920D34D4");

                    b.HasIndex("senderId");

                    b.ToTable("ChatMessageAI");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.ChatRoom", b =>
                {
                    b.Property<int>("chatRoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("chatRoomId"));

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("chatRoomId")
                        .HasName("PK__ChatRoom__CB58B49253ED31B5");

                    b.ToTable("ChatRoom");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.ChatRoomUser", b =>
                {
                    b.Property<int>("chatRoomUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("chatRoomUserId"));

                    b.Property<int?>("chatRoomId")
                        .HasColumnType("int");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.HasKey("chatRoomUserId")
                        .HasName("PK__ChatRoom__C9D3D5664196E8D8");

                    b.HasIndex("chatRoomId");

                    b.HasIndex("userId");

                    b.ToTable("ChatRoomUser");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Driver", b =>
                {
                    b.Property<int>("driverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("driverId"));

                    b.Property<DateOnly?>("dob")
                        .HasColumnType("date");

                    b.Property<string>("driverAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("driverLicense")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("driverName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("driverPhoneNumber")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.HasKey("driverId")
                        .HasName("PK__Driver__F1532DF2E68365B1");

                    b.HasIndex("userId");

                    b.ToTable("Driver");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.DriverSchedule", b =>
                {
                    b.Property<int>("driverScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("driverScheduleId"));

                    b.Property<int?>("campId")
                        .HasColumnType("int");

                    b.Property<int?>("driverId")
                        .HasColumnType("int");

                    b.Property<TimeOnly?>("endTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("startTime")
                        .HasColumnType("time");

                    b.Property<string>("status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("vehicleId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("workDate")
                        .HasColumnType("date");

                    b.HasKey("driverScheduleId")
                        .HasName("PK__DriverSc__8ACADD5F9F179836");

                    b.HasIndex("campId");

                    b.HasIndex("driverId");

                    b.HasIndex("vehicleId");

                    b.ToTable("DriverSchedule");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.DriverVehicle", b =>
                {
                    b.Property<int>("driverVehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("driverVehicleId"));

                    b.Property<int?>("driverId")
                        .HasColumnType("int");

                    b.Property<int?>("vehicleId")
                        .HasColumnType("int");

                    b.HasKey("driverVehicleId")
                        .HasName("PK__DriverVe__D1A5D3882F71F9B3");

                    b.HasIndex("driverId");

                    b.HasIndex("vehicleId");

                    b.ToTable("DriverVehicle");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.FAQ", b =>
                {
                    b.Property<int>("faqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("faqId"));

                    b.Property<string>("answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("question")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("faqId")
                        .HasName("PK__FAQ__B18E4567C2723C94");

                    b.ToTable("FAQ");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Feedback", b =>
                {
                    b.Property<int>("feedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("feedbackId"));

                    b.Property<int?>("campId")
                        .HasColumnType("int");

                    b.Property<string>("comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("createAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("rating")
                        .HasColumnType("int");

                    b.Property<int?>("registrationId")
                        .HasColumnType("int");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.HasKey("feedbackId")
                        .HasName("PK__Feedback__2613FD244309CC64");

                    b.HasIndex("campId");

                    b.HasIndex("registrationId");

                    b.HasIndex("userId");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.GroupActivity", b =>
                {
                    b.Property<int>("groupActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("groupActivityId"));

                    b.Property<int?>("activityId")
                        .HasColumnType("int");

                    b.Property<int?>("camperGroupId")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("groupActivityId")
                        .HasName("PK__GroupAct__4CEA4BBCEF38C6BA");

                    b.HasIndex("activityId");

                    b.HasIndex("camperGroupId");

                    b.ToTable("GroupActivity");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Guardian", b =>
                {
                    b.Property<int>("guardianId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("guardianId"));

                    b.Property<string>("answer")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("category")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("dob")
                        .HasColumnType("date");

                    b.Property<string>("fullName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("gender")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("guardianId")
                        .HasName("PK__Guardian__8A1718E14FC024F6");

                    b.ToTable("Guardian");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.HealthRecord", b =>
                {
                    b.Property<int>("healthRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("healthRecordId"));

                    b.Property<string>("allergies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("camperId")
                        .HasColumnType("int");

                    b.Property<string>("condition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("createAt")
                        .HasColumnType("datetime");

                    b.Property<bool?>("isAllergy")
                        .HasColumnType("bit");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("healthRecordId")
                        .HasName("PK__HealthRe__59B2D406F4033F3E");

                    b.HasIndex(new[] { "camperId" }, "UQ_HealthRecord_CamperId")
                        .IsUnique()
                        .HasFilter("[camperId] IS NOT NULL");

                    b.ToTable("HealthRecord");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Incident", b =>
                {
                    b.Property<int>("incidentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("incidentId"));

                    b.Property<int?>("campId")
                        .HasColumnType("int");

                    b.Property<int?>("campStaffId")
                        .HasColumnType("int");

                    b.Property<int?>("camperId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("incidentDate")
                        .HasColumnType("date");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("incidentId")
                        .HasName("PK__Incident__06A5D741842EED80");

                    b.HasIndex("campId");

                    b.HasIndex("campStaffId");

                    b.HasIndex("camperId");

                    b.ToTable("Incident");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Livestream", b =>
                {
                    b.Property<int>("livestreamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("livestreamId"));

                    b.Property<int?>("hostId")
                        .HasColumnType("int");

                    b.Property<string>("roomId")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("livestreamId")
                        .HasName("PK__Livestre__650D2CD3F56FAE02");

                    b.HasIndex("hostId");

                    b.ToTable("Livestream");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.LivestreamUser", b =>
                {
                    b.Property<int>("livestreamUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("livestreamUserId"));

                    b.Property<int?>("livestreamId")
                        .HasColumnType("int");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.HasKey("livestreamUserId")
                        .HasName("PK__Livestre__A1E8B1E8EC9C9A7E");

                    b.HasIndex("livestreamId");

                    b.HasIndex("userId");

                    b.ToTable("LivestreamUser");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Location", b =>
                {
                    b.Property<int>("locationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("locationId"));

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("locationType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("routeId")
                        .HasColumnType("int");

                    b.HasKey("locationId")
                        .HasName("PK__Location__30646B6E1B427B16");

                    b.HasIndex("routeId");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Message", b =>
                {
                    b.Property<int>("messageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("messageId"));

                    b.Property<int?>("chatRoomId")
                        .HasColumnType("int");

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("createAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("receiverId")
                        .HasColumnType("int");

                    b.Property<int?>("senderId")
                        .HasColumnType("int");

                    b.HasKey("messageId")
                        .HasName("PK__Message__4808B9934C3F9FF7");

                    b.HasIndex("chatRoomId");

                    b.HasIndex("receiverId");

                    b.HasIndex("senderId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Notification", b =>
                {
                    b.Property<int>("notificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("notificationId"));

                    b.Property<DateTime?>("createAt")
                        .HasColumnType("datetime");

                    b.Property<string>("message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.HasKey("notificationId")
                        .HasName("PK__Notifica__4BA5CEA9134CC0BA");

                    b.HasIndex("userId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.ParentCamper", b =>
                {
                    b.Property<int>("parentCamperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("parentCamperId"));

                    b.Property<int?>("camperId")
                        .HasColumnType("int");

                    b.Property<int?>("parentId")
                        .HasColumnType("int");

                    b.Property<string>("relationship")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("parentCamperId")
                        .HasName("PK__ParentCa__6645EA93BF9107B7");

                    b.HasIndex("camperId");

                    b.HasIndex("parentId");

                    b.ToTable("ParentCamper");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Promotion", b =>
                {
                    b.Property<int>("promotionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("promotionId"));

                    b.Property<string>("code")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("createAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("createBy")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("endDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("maxDiscountAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("percent")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int?>("promotionTypeId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("startDate")
                        .HasColumnType("date");

                    b.Property<string>("status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("promotionId")
                        .HasName("PK__Promotio__99EB696EC39A7ACC");

                    b.HasIndex("createBy");

                    b.HasIndex("promotionTypeId");

                    b.ToTable("Promotion");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.PromotionType", b =>
                {
                    b.Property<int>("promotionTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("promotionTypeId"));

                    b.Property<DateTime?>("createAt")
                        .HasColumnType("datetime");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("updateAt")
                        .HasColumnType("datetime");

                    b.HasKey("promotionTypeId")
                        .HasName("PK__Promotio__847F158D388561AD");

                    b.ToTable("PromotionType");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.RefreshToken", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("expiresAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("isRevoked")
                        .HasColumnType("bit");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("id")
                        .HasName("PK__RefreshT__3213E83F646E62AB");

                    b.HasIndex("userId");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Registration", b =>
                {
                    b.Property<int>("registrationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("registrationId"));

                    b.Property<int?>("appliedPromotionId")
                        .HasColumnType("int");

                    b.Property<int?>("campId")
                        .HasColumnType("int");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("registrationCreateAt")
                        .HasColumnType("datetime");

                    b.Property<string>("status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.HasKey("registrationId")
                        .HasName("PK__Registra__A3DB1435EB987530");

                    b.HasIndex("appliedPromotionId");

                    b.HasIndex("campId");

                    b.HasIndex("userId");

                    b.ToTable("Registration");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.RegistrationCancel", b =>
                {
                    b.Property<int>("registrationCancelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("registrationCancelId"));

                    b.Property<string>("imageRefund")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("registrationId")
                        .HasColumnType("int");

                    b.HasKey("registrationCancelId")
                        .HasName("PK__Registra__1BFD300A16D0BB46");

                    b.HasIndex("registrationId");

                    b.ToTable("RegistrationCancel");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Report", b =>
                {
                    b.Property<int>("reportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("reportId"));

                    b.Property<int?>("activityId")
                        .HasColumnType("int");

                    b.Property<int?>("camperId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createAt")
                        .HasColumnType("datetime");

                    b.Property<string>("image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("level")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("reportedBy")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("reportId")
                        .HasName("PK__Report__1C9B4E2D17DAFC9F");

                    b.HasIndex("activityId");

                    b.HasIndex("camperId");

                    b.HasIndex("reportedBy");

                    b.ToTable("Report");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Route", b =>
                {
                    b.Property<int>("routeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("routeId"));

                    b.Property<int?>("campId")
                        .HasColumnType("int");

                    b.Property<string>("routeName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("routeId")
                        .HasName("PK__Route__BAC024C756723709");

                    b.HasIndex("campId");

                    b.ToTable("Route");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Transaction", b =>
                {
                    b.Property<int>("transactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("transactionId"));

                    b.Property<decimal?>("amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("method")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("registrationId")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("transactionCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("transactionTime")
                        .HasColumnType("datetime");

                    b.Property<string>("type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("transactionId")
                        .HasName("PK__Transact__9B57CF7216BC3CDE");

                    b.HasIndex("registrationId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.UserAccount", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userId"));

                    b.Property<string>("avatar")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("createAt")
                        .HasColumnType("datetime");

                    b.Property<DateOnly?>("dob")
                        .HasColumnType("date");

                    b.Property<string>("email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("firstName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("lastName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("phoneNumber")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("role")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("userId")
                        .HasName("PK__UserAcco__CB9A1CFF87D326B1");

                    b.ToTable("UserAccount");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Vehicle", b =>
                {
                    b.Property<int>("vehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("vehicleId"));

                    b.Property<int?>("capacity")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("vehicleName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("vehicleNumber")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("vehicleType")
                        .HasColumnType("int");

                    b.HasKey("vehicleId")
                        .HasName("PK__Vehicle__5B9D25F2463A0876");

                    b.HasIndex("vehicleType");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.VehicleSchedule", b =>
                {
                    b.Property<int>("vehicleScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("vehicleScheduleId"));

                    b.Property<DateOnly?>("date")
                        .HasColumnType("date");

                    b.Property<int?>("routeId")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("vehicleId")
                        .HasColumnType("int");

                    b.HasKey("vehicleScheduleId")
                        .HasName("PK__VehicleS__98B042A10CA86140");

                    b.HasIndex("routeId");

                    b.HasIndex("vehicleId");

                    b.ToTable("VehicleSchedule");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.VehicleType", b =>
                {
                    b.Property<int>("vehicleTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("vehicleTypeId"));

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("vehicleTypeId")
                        .HasName("PK__VehicleT__4709A1D4F0649896");

                    b.ToTable("VehicleType");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Visitation", b =>
                {
                    b.Property<int>("visitationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("visitationId"));

                    b.Property<DateTime?>("CheckInTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CheckOutTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("approvedBy")
                        .HasColumnType("int");

                    b.Property<int?>("camperId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createAt")
                        .HasColumnType("datetime");

                    b.Property<string>("status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("updateAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("visitEndTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("visitStartTime")
                        .HasColumnType("datetime");

                    b.HasKey("visitationId")
                        .HasName("PK__Visitati__E33BAE4142B08E97");

                    b.HasIndex("approvedBy");

                    b.HasIndex("camperId");

                    b.HasIndex("userId");

                    b.ToTable("Visitation");
                });

            modelBuilder.Entity("RegistrationCamper", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.Camper", null)
                        .WithMany()
                        .HasForeignKey("camperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Registrat__campe__308E3499");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.Registration", null)
                        .WithMany()
                        .HasForeignKey("registrationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Registrat__regis__2F9A1060");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Accommodation", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.AccommodationType", "accommodationType")
                        .WithMany("Accommodations")
                        .HasForeignKey("accommodationTypeId")
                        .HasConstraintName("FK__Accommoda__accom__1CBC4616");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.Camp", "camp")
                        .WithMany("Accommodations")
                        .HasForeignKey("campId")
                        .HasConstraintName("FK__Accommoda__campI__1BC821DD");

                    b.Navigation("accommodationType");

                    b.Navigation("camp");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Activity", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.Camp", "camp")
                        .WithMany("Activities")
                        .HasForeignKey("campId")
                        .HasConstraintName("FK_Activity_Camp");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.Location", "location")
                        .WithMany("Activities")
                        .HasForeignKey("locationId")
                        .HasConstraintName("FK_Activity_Location");

                    b.Navigation("camp");

                    b.Navigation("location");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Album", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.Camp", "camp")
                        .WithMany("Albums")
                        .HasForeignKey("campId")
                        .HasConstraintName("FK__Album__campId__7E02B4CC");

                    b.Navigation("camp");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.AlbumPhoto", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.Album", "album")
                        .WithMany("AlbumPhotos")
                        .HasForeignKey("albumId")
                        .HasConstraintName("FK__AlbumPhot__album__00DF2177");

                    b.Navigation("album");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.AlbumPhotoFace", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.AlbumPhoto", "albumPhoto")
                        .WithMany("AlbumPhotoFaces")
                        .HasForeignKey("albumPhotoId")
                        .IsRequired()
                        .HasConstraintName("FK_AlbumPhotoFace_AlbumPhoto");

                    b.Navigation("albumPhoto");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.AttendanceLog", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.Activity", "activity")
                        .WithMany("AttendanceLogs")
                        .HasForeignKey("activityId")
                        .HasConstraintName("FK_AttendanceLog_Activity");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.Camper", "camper")
                        .WithMany("AttendanceLogs")
                        .HasForeignKey("camperId")
                        .IsRequired()
                        .HasConstraintName("FK_AttendanceLog_Camper");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.UserAccount", "staff")
                        .WithMany("AttendanceLogs")
                        .HasForeignKey("staffId")
                        .HasConstraintName("FK_AttendanceLog_Staff");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.Vehicle", "vehicle")
                        .WithMany("AttendanceLogs")
                        .HasForeignKey("vehicleId")
                        .HasConstraintName("FK_AttendanceLog_Vehicle");

                    b.Navigation("activity");

                    b.Navigation("camper");

                    b.Navigation("staff");

                    b.Navigation("vehicle");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.BankUser", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.UserAccount", "user")
                        .WithMany("BankUsers")
                        .HasForeignKey("userId")
                        .HasConstraintName("FK__BankUser__userId__7D439ABD");

                    b.Navigation("user");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Blog", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.UserAccount", "author")
                        .WithMany("Blogs")
                        .HasForeignKey("authorId")
                        .HasConstraintName("FK__Blog__authorId__0880433F");

                    b.Navigation("author");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Camp", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.CampType", "campType")
                        .WithMany("Camps")
                        .HasForeignKey("campTypeId")
                        .HasConstraintName("FK__Camp__campTypeId__04E4BC85");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.UserAccount", "createByNavigation")
                        .WithMany("Camps")
                        .HasForeignKey("createBy")
                        .HasConstraintName("FK__Camp__createBy__05D8E0BE");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.Location", "location")
                        .WithMany("Camps")
                        .HasForeignKey("locationId")
                        .HasConstraintName("FK_Camp_Location");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.Promotion", "promotion")
                        .WithMany("Camps")
                        .HasForeignKey("promotionId")
                        .HasConstraintName("FK_Camp_Promotion");

                    b.Navigation("campType");

                    b.Navigation("createByNavigation");

                    b.Navigation("location");

                    b.Navigation("promotion");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.CampBadge", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.Badge", "badge")
                        .WithMany("CampBadges")
                        .HasForeignKey("badgeId")
                        .HasConstraintName("FK__CampBadge__badge__208CD6FA");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.Camp", "camp")
                        .WithMany("CampBadges")
                        .HasForeignKey("campId")
                        .HasConstraintName("FK__CampBadge__campI__2180FB33");

                    b.Navigation("badge");

                    b.Navigation("camp");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.CampStaffAssignment", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.Camp", "camp")
                        .WithMany("CampStaffAssignments")
                        .HasForeignKey("campId")
                        .HasConstraintName("FK__ManagerAs__campI__151B244E");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.UserAccount", "staff")
                        .WithMany("CampStaffAssignments")
                        .HasForeignKey("staffId")
                        .HasConstraintName("FK__ManagerAs__manag__14270015");

                    b.Navigation("camp");

                    b.Navigation("staff");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Camper", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.CamperGroup", "group")
                        .WithMany("Campers")
                        .HasForeignKey("groupId")
                        .HasConstraintName("FK__Camper__groupId__245D67DE");

                    b.Navigation("group");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.CamperAccommodation", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.Accommodation", "accommodation")
                        .WithMany("CamperAccommodations")
                        .HasForeignKey("accommodationId")
                        .IsRequired()
                        .HasConstraintName("FK_CamperAccommodation_Accommodation");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.Camper", "camper")
                        .WithMany("CamperAccommodations")
                        .HasForeignKey("camperId")
                        .IsRequired()
                        .HasConstraintName("FK_CamperAccommodation_Camper");

                    b.Navigation("accommodation");

                    b.Navigation("camper");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.CamperActivity", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.Activity", "activity")
                        .WithMany("CamperActivities")
                        .HasForeignKey("activityId")
                        .HasConstraintName("FK__CamperAct__activ__3A4CA8FD");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.Camper", "camper")
                        .WithMany("CamperActivities")
                        .HasForeignKey("camperId")
                        .HasConstraintName("FK__CamperAct__campe__395884C4");

                    b.Navigation("activity");

                    b.Navigation("camper");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.CamperBadge", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.Badge", "badge")
                        .WithMany("CamperBadges")
                        .HasForeignKey("badgeId")
                        .HasConstraintName("FK__CamperBad__badge__32AB8735");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.Camper", "camper")
                        .WithMany("CamperBadges")
                        .HasForeignKey("camperId")
                        .HasConstraintName("FK__CamperBad__campe__31B762FC");

                    b.Navigation("badge");

                    b.Navigation("camper");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.CamperGroup", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.Camp", "camp")
                        .WithMany("CamperGroups")
                        .HasForeignKey("campId")
                        .HasConstraintName("FK__CamperGro__campI__18EBB532");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.UserAccount", "supervisor")
                        .WithMany("CamperGroups")
                        .HasForeignKey("supervisorId")
                        .HasConstraintName("FK__CamperGro__super__17F790F9");

                    b.Navigation("camp");

                    b.Navigation("supervisor");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.CamperGuardian", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.Camper", "camper")
                        .WithMany("CamperGuardians")
                        .HasForeignKey("camperId")
                        .HasConstraintName("FK__CamperGua__campe__2739D489");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.Guardian", "guardian")
                        .WithMany("CamperGuardians")
                        .HasForeignKey("guardianId")
                        .HasConstraintName("FK__CamperGua__guard__282DF8C2");

                    b.Navigation("camper");

                    b.Navigation("guardian");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.ChatMessageAI", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.UserAccount", "sender")
                        .WithMany("ChatMessageAIs")
                        .HasForeignKey("senderId")
                        .HasConstraintName("FK__ChatMessa__sende__607251E5");

                    b.Navigation("sender");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.ChatRoomUser", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.ChatRoom", "chatRoom")
                        .WithMany("ChatRoomUsers")
                        .HasForeignKey("chatRoomId")
                        .HasConstraintName("FK__ChatRoomU__chatR__57DD0BE4");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.UserAccount", "user")
                        .WithMany("ChatRoomUsers")
                        .HasForeignKey("userId")
                        .HasConstraintName("FK__ChatRoomU__userI__58D1301D");

                    b.Navigation("chatRoom");

                    b.Navigation("user");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Driver", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.UserAccount", "user")
                        .WithMany("Drivers")
                        .HasForeignKey("userId")
                        .HasConstraintName("FK__Driver__userId__02084FDA");

                    b.Navigation("user");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.DriverSchedule", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.Camp", "camp")
                        .WithMany("DriverSchedules")
                        .HasForeignKey("campId")
                        .HasConstraintName("FK__DriverSch__campI__531856C7");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.Driver", "driver")
                        .WithMany("DriverSchedules")
                        .HasForeignKey("driverId")
                        .HasConstraintName("FK__DriverSch__drive__51300E55");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.Vehicle", "vehicle")
                        .WithMany("DriverSchedules")
                        .HasForeignKey("vehicleId")
                        .HasConstraintName("FK__DriverSch__vehic__5224328E");

                    b.Navigation("camp");

                    b.Navigation("driver");

                    b.Navigation("vehicle");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.DriverVehicle", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.Driver", "driver")
                        .WithMany("DriverVehicles")
                        .HasForeignKey("driverId")
                        .HasConstraintName("FK__DriverVeh__drive__4D5F7D71");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.Vehicle", "vehicle")
                        .WithMany("DriverVehicles")
                        .HasForeignKey("vehicleId")
                        .HasConstraintName("FK__DriverVeh__vehic__4E53A1AA");

                    b.Navigation("driver");

                    b.Navigation("vehicle");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Feedback", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.Camp", "camp")
                        .WithMany("Feedbacks")
                        .HasForeignKey("campId")
                        .HasConstraintName("FK__Feedback__campId__7849DB76");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.Registration", "registration")
                        .WithMany("Feedbacks")
                        .HasForeignKey("registrationId")
                        .HasConstraintName("FK__Feedback__regist__76619304");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.UserAccount", "user")
                        .WithMany("Feedbacks")
                        .HasForeignKey("userId")
                        .HasConstraintName("FK__Feedback__userId__7755B73D");

                    b.Navigation("camp");

                    b.Navigation("registration");

                    b.Navigation("user");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.GroupActivity", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.Activity", "activity")
                        .WithMany("GroupActivities")
                        .HasForeignKey("activityId")
                        .HasConstraintName("FK__GroupActi__activ__3E1D39E1");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.CamperGroup", "camperGroup")
                        .WithMany("GroupActivities")
                        .HasForeignKey("camperGroupId")
                        .HasConstraintName("FK__GroupActi__campe__3D2915A8");

                    b.Navigation("activity");

                    b.Navigation("camperGroup");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.HealthRecord", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.Camper", "camper")
                        .WithOne("HealthRecord")
                        .HasForeignKey("SummerCampManagementSystem.DAL.Models.HealthRecord", "camperId")
                        .HasConstraintName("FK__HealthRec__campe__2EDAF651");

                    b.Navigation("camper");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Incident", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.Camp", "camp")
                        .WithMany("Incidents")
                        .HasForeignKey("campId")
                        .HasConstraintName("FK__Incident__campId__47A6A41B");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.UserAccount", "campStaff")
                        .WithMany("Incidents")
                        .HasForeignKey("campStaffId")
                        .HasConstraintName("FK__Incident__campSt__46B27FE2");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.Camper", "camper")
                        .WithMany("Incidents")
                        .HasForeignKey("camperId")
                        .HasConstraintName("FK__Incident__camper__45BE5BA9");

                    b.Navigation("camp");

                    b.Navigation("campStaff");

                    b.Navigation("camper");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Livestream", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.UserAccount", "host")
                        .WithMany("Livestreams")
                        .HasForeignKey("hostId")
                        .HasConstraintName("FK__Livestrea__hostI__634EBE90");

                    b.Navigation("host");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.LivestreamUser", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.Livestream", "livestream")
                        .WithMany("LivestreamUsers")
                        .HasForeignKey("livestreamId")
                        .HasConstraintName("FK__Livestrea__lives__662B2B3B");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.UserAccount", "user")
                        .WithMany("LivestreamUsers")
                        .HasForeignKey("userId")
                        .HasConstraintName("FK__Livestrea__userI__671F4F74");

                    b.Navigation("livestream");

                    b.Navigation("user");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Location", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.Route", "route")
                        .WithMany("Locations")
                        .HasForeignKey("routeId")
                        .HasConstraintName("FK__Location__routeI__0B91BA14");

                    b.Navigation("route");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Message", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.ChatRoom", "chatRoom")
                        .WithMany("Messages")
                        .HasForeignKey("chatRoomId")
                        .HasConstraintName("FK__Message__chatRoo__5BAD9CC8");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.UserAccount", "receiver")
                        .WithMany("Messagereceivers")
                        .HasForeignKey("receiverId")
                        .HasConstraintName("FK__Message__receive__5D95E53A");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.UserAccount", "sender")
                        .WithMany("Messagesenders")
                        .HasForeignKey("senderId")
                        .HasConstraintName("FK__Message__senderI__5CA1C101");

                    b.Navigation("chatRoom");

                    b.Navigation("receiver");

                    b.Navigation("sender");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Notification", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.UserAccount", "user")
                        .WithMany("Notifications")
                        .HasForeignKey("userId")
                        .HasConstraintName("FK__Notificat__userI__7B264821");

                    b.Navigation("user");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.ParentCamper", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.Camper", "camper")
                        .WithMany("ParentCampers")
                        .HasForeignKey("camperId")
                        .HasConstraintName("FK__ParentCam__campe__2BFE89A6");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.UserAccount", "parent")
                        .WithMany("ParentCampers")
                        .HasForeignKey("parentId")
                        .HasConstraintName("FK__ParentCam__paren__2B0A656D");

                    b.Navigation("camper");

                    b.Navigation("parent");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Promotion", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.UserAccount", "createByNavigation")
                        .WithMany("Promotions")
                        .HasForeignKey("createBy")
                        .HasConstraintName("FK__Promotion__creat__0F624AF8");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.PromotionType", "promotionType")
                        .WithMany("Promotions")
                        .HasForeignKey("promotionTypeId")
                        .HasConstraintName("FK__Promotion__promo__10566F31");

                    b.Navigation("createByNavigation");

                    b.Navigation("promotionType");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.RefreshToken", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.UserAccount", "user")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("userId")
                        .IsRequired()
                        .HasConstraintName("FK_RefreshToken_User");

                    b.Navigation("user");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Registration", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.Promotion", "appliedPromotion")
                        .WithMany("Registrations")
                        .HasForeignKey("appliedPromotionId")
                        .HasConstraintName("FK_Registration_AppliedPromotion");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.Camp", "camp")
                        .WithMany("Registrations")
                        .HasForeignKey("campId")
                        .HasConstraintName("FK__Registrat__campI__6CD828CA");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.UserAccount", "user")
                        .WithMany("Registrations")
                        .HasForeignKey("userId")
                        .HasConstraintName("FK_Registration_UserAccount");

                    b.Navigation("appliedPromotion");

                    b.Navigation("camp");

                    b.Navigation("user");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.RegistrationCancel", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.Registration", "registration")
                        .WithMany("RegistrationCancels")
                        .HasForeignKey("registrationId")
                        .HasConstraintName("FK__Registrat__regis__73852659");

                    b.Navigation("registration");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Report", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.Activity", "activity")
                        .WithMany("Reports")
                        .HasForeignKey("activityId")
                        .HasConstraintName("FK__Report__activity__42E1EEFE");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.Camper", "camper")
                        .WithMany("Reports")
                        .HasForeignKey("camperId")
                        .HasConstraintName("FK__Report__camperId__40F9A68C");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.UserAccount", "reportedByNavigation")
                        .WithMany("Reports")
                        .HasForeignKey("reportedBy")
                        .HasConstraintName("FK__Report__reported__41EDCAC5");

                    b.Navigation("activity");

                    b.Navigation("camper");

                    b.Navigation("reportedByNavigation");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Route", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.Camp", "camp")
                        .WithMany("Routes")
                        .HasForeignKey("campId")
                        .HasConstraintName("FK__Route__campId__08B54D69");

                    b.Navigation("camp");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Transaction", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.Registration", "registration")
                        .WithMany("Transactions")
                        .HasForeignKey("registrationId")
                        .HasConstraintName("FK__Transacti__regis__70A8B9AE");

                    b.Navigation("registration");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Vehicle", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.VehicleType", "vehicleTypeNavigation")
                        .WithMany("Vehicles")
                        .HasForeignKey("vehicleType")
                        .HasConstraintName("FK__Vehicle__vehicle__4A8310C6");

                    b.Navigation("vehicleTypeNavigation");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.VehicleSchedule", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.Route", "route")
                        .WithMany("VehicleSchedules")
                        .HasForeignKey("routeId")
                        .HasConstraintName("FK__VehicleSc__route__0C50D423");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.Vehicle", "vehicle")
                        .WithMany("VehicleSchedules")
                        .HasForeignKey("vehicleId")
                        .HasConstraintName("FK__VehicleSc__vehic__0B5CAFEA");

                    b.Navigation("route");

                    b.Navigation("vehicle");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Visitation", b =>
                {
                    b.HasOne("SummerCampManagementSystem.DAL.Models.UserAccount", "approvedByNavigation")
                        .WithMany("VisitationapprovedByNavigations")
                        .HasForeignKey("approvedBy")
                        .HasConstraintName("FK__Visitatio__appro__05A3D694");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.Camper", "camper")
                        .WithMany("Visitations")
                        .HasForeignKey("camperId")
                        .HasConstraintName("FK__Visitatio__campe__04AFB25B");

                    b.HasOne("SummerCampManagementSystem.DAL.Models.UserAccount", "user")
                        .WithMany("Visitationusers")
                        .HasForeignKey("userId")
                        .HasConstraintName("FK__Visitatio__userI__03BB8E22");

                    b.Navigation("approvedByNavigation");

                    b.Navigation("camper");

                    b.Navigation("user");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Accommodation", b =>
                {
                    b.Navigation("CamperAccommodations");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.AccommodationType", b =>
                {
                    b.Navigation("Accommodations");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Activity", b =>
                {
                    b.Navigation("AttendanceLogs");

                    b.Navigation("CamperActivities");

                    b.Navigation("GroupActivities");

                    b.Navigation("Reports");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Album", b =>
                {
                    b.Navigation("AlbumPhotos");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.AlbumPhoto", b =>
                {
                    b.Navigation("AlbumPhotoFaces");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Badge", b =>
                {
                    b.Navigation("CampBadges");

                    b.Navigation("CamperBadges");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Camp", b =>
                {
                    b.Navigation("Accommodations");

                    b.Navigation("Activities");

                    b.Navigation("Albums");

                    b.Navigation("CampBadges");

                    b.Navigation("CampStaffAssignments");

                    b.Navigation("CamperGroups");

                    b.Navigation("DriverSchedules");

                    b.Navigation("Feedbacks");

                    b.Navigation("Incidents");

                    b.Navigation("Registrations");

                    b.Navigation("Routes");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.CampType", b =>
                {
                    b.Navigation("Camps");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Camper", b =>
                {
                    b.Navigation("AttendanceLogs");

                    b.Navigation("CamperAccommodations");

                    b.Navigation("CamperActivities");

                    b.Navigation("CamperBadges");

                    b.Navigation("CamperGuardians");

                    b.Navigation("HealthRecord");

                    b.Navigation("Incidents");

                    b.Navigation("ParentCampers");

                    b.Navigation("Reports");

                    b.Navigation("Visitations");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.CamperGroup", b =>
                {
                    b.Navigation("Campers");

                    b.Navigation("GroupActivities");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.ChatRoom", b =>
                {
                    b.Navigation("ChatRoomUsers");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Driver", b =>
                {
                    b.Navigation("DriverSchedules");

                    b.Navigation("DriverVehicles");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Guardian", b =>
                {
                    b.Navigation("CamperGuardians");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Livestream", b =>
                {
                    b.Navigation("LivestreamUsers");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Location", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("Camps");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Promotion", b =>
                {
                    b.Navigation("Camps");

                    b.Navigation("Registrations");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.PromotionType", b =>
                {
                    b.Navigation("Promotions");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Registration", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("RegistrationCancels");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Route", b =>
                {
                    b.Navigation("Locations");

                    b.Navigation("VehicleSchedules");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.UserAccount", b =>
                {
                    b.Navigation("AttendanceLogs");

                    b.Navigation("BankUsers");

                    b.Navigation("Blogs");

                    b.Navigation("CampStaffAssignments");

                    b.Navigation("CamperGroups");

                    b.Navigation("Camps");

                    b.Navigation("ChatMessageAIs");

                    b.Navigation("ChatRoomUsers");

                    b.Navigation("Drivers");

                    b.Navigation("Feedbacks");

                    b.Navigation("Incidents");

                    b.Navigation("LivestreamUsers");

                    b.Navigation("Livestreams");

                    b.Navigation("Messagereceivers");

                    b.Navigation("Messagesenders");

                    b.Navigation("Notifications");

                    b.Navigation("ParentCampers");

                    b.Navigation("Promotions");

                    b.Navigation("RefreshTokens");

                    b.Navigation("Registrations");

                    b.Navigation("Reports");

                    b.Navigation("VisitationapprovedByNavigations");

                    b.Navigation("Visitationusers");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.Vehicle", b =>
                {
                    b.Navigation("AttendanceLogs");

                    b.Navigation("DriverSchedules");

                    b.Navigation("DriverVehicles");

                    b.Navigation("VehicleSchedules");
                });

            modelBuilder.Entity("SummerCampManagementSystem.DAL.Models.VehicleType", b =>
                {
                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
