// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;
using System;
using System.Collections.Generic;

namespace SummerCampManagementSystem.DAL.Models;

public partial class CampEaseDatabaseContext : DbContext
{
    public CampEaseDatabaseContext()
    {
    }

    public CampEaseDatabaseContext(DbContextOptions<CampEaseDatabaseContext> options)
        : base(options)
    {
    }

    public virtual DbSet<User> Users { get; set; }

    public static string GetConnectionString(string connectionStringName)
    {
        var config = new ConfigurationBuilder()
            .SetBasePath(AppDomain.CurrentDomain.BaseDirectory)
            .AddJsonFile("appsettings.json")
            .Build();

        string connectionString = config.GetConnectionString(connectionStringName);
        return connectionString;
    }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        => optionsBuilder.UseSqlServer(GetConnectionString("DefaultConnection")).UseQueryTrackingBehavior(QueryTrackingBehavior.NoTracking);

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.userId).HasName("PK__User__CB9A1CFF1A9CFB31");

            entity.ToTable("User");

            entity.HasIndex(e => e.phoneNumber, "UQ__User__4849DA013D9474BF").IsUnique();

            entity.HasIndex(e => e.email, "UQ__User__AB6E61643FCDEBA8").IsUnique();

            entity.Property(e => e.avatar).HasMaxLength(255);
            entity.Property(e => e.createAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.email)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.firstName)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.isActive).HasDefaultValue(true);
            entity.Property(e => e.lastName)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.password_hash)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.phoneNumber).HasMaxLength(20);
            entity.Property(e => e.role)
                .HasConversion<string>()
                .IsRequired()
                .HasMaxLength(20);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}