// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace SummerCampManagementSystem.DAL.Models;

[Table("Camp")]
public partial class Camp
{
    [Key]
    public int campId { get; set; }

    [StringLength(255)]
    [Unicode(false)]
    public string name { get; set; }

    [Column(TypeName = "text")]
    public string description { get; set; }

    [StringLength(255)]
    [Unicode(false)]
    public string place { get; set; }

    [StringLength(255)]
    [Unicode(false)]
    public string address { get; set; }

    public int? minParticipants { get; set; }

    public int? maxParticipants { get; set; }

    public DateOnly? startDate { get; set; }

    public DateOnly? endDate { get; set; }

    [Column(TypeName = "decimal(10, 2)")]
    public decimal? price { get; set; }

    [StringLength(50)]
    [Unicode(false)]
    public string status { get; set; }

    public int? campTypeId { get; set; }

    [StringLength(255)]
    [Unicode(false)]
    public string image { get; set; }

    public int? createBy { get; set; }

    public int? locationId { get; set; }

    public int? promotionId { get; set; }

    [InverseProperty("camp")]
    public virtual ICollection<Accommodation> Accommodations { get; set; } = new List<Accommodation>();

    [InverseProperty("camp")]
    public virtual ICollection<Activity> Activities { get; set; } = new List<Activity>();

    [InverseProperty("camp")]
    public virtual ICollection<Album> Albums { get; set; } = new List<Album>();

    [InverseProperty("camp")]
    public virtual ICollection<CampBadge> CampBadges { get; set; } = new List<CampBadge>();

    [InverseProperty("camp")]
    public virtual ICollection<CamperGroup> CamperGroups { get; set; } = new List<CamperGroup>();

    [InverseProperty("camp")]
    public virtual ICollection<DriverSchedule> DriverSchedules { get; set; } = new List<DriverSchedule>();

    [InverseProperty("camp")]
    public virtual ICollection<Feedback> Feedbacks { get; set; } = new List<Feedback>();

    [InverseProperty("camp")]
    public virtual ICollection<Incident> Incidents { get; set; } = new List<Incident>();

    [InverseProperty("camp")]
    public virtual ICollection<ManagerAssignment> ManagerAssignments { get; set; } = new List<ManagerAssignment>();

    [InverseProperty("camp")]
    public virtual ICollection<Registration> Registrations { get; set; } = new List<Registration>();

    [InverseProperty("camp")]
    public virtual ICollection<Route> Routes { get; set; } = new List<Route>();

    [ForeignKey("campTypeId")]
    [InverseProperty("Camps")]
    public virtual CampType campType { get; set; }

    [ForeignKey("createBy")]
    [InverseProperty("Camps")]
    public virtual UserAccount createByNavigation { get; set; }

    [ForeignKey("locationId")]
    [InverseProperty("Camps")]
    public virtual Location location { get; set; }

    [ForeignKey("promotionId")]
    [InverseProperty("Camps")]
    public virtual Promotion promotion { get; set; }
}